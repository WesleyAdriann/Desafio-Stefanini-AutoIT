{"version":3,"sources":["components/CorrecaoAutomatica.js","components/AnaliseTexto.js","components/PainelEmocao.js","config/config.js","App.js","serviceWorker.js","index.js"],"names":["CorrecaoAutomatica","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","spellCheck","e","state","inputNome","length","alert","test","String","inputEmail","toLowerCase","inputDescricao","preventDefault","handleChanges","id","value","setState","_this2","react_default","a","createElement","className","type","placeholder","onChange","event","target","rows","style","float","onClick","Component","AnaliseTexto","componentDidMount","flag","handleLingua","descricao","handlePalavras","handleSentimento","axios","method","url","headers","Ocp-Apim-Subscription-Key","data","documents","text","then","response","lingua","detectedLanguages","sentimento","score","palavrasChave","keyPhrases","reRender","window","setTimeout","fontSize","name","iso6391Name","entries","map","_ref","_ref2","slicedToArray","i","key","role","width","concat","parseInt","PainelEmocao","info","userNome","paddingTop","userEmail","userDescricao","components_AnaliseTexto","DB_config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","db","on","snap","push","val","addUser","nome","email","set","err","returnSpellCheck","bind","assertThisInitialized","app","firebase","initializeApp","database","ref","child","params","mkt","mode","flaggedTokens","newStr","suggestions","suggestion","oldStr","token","replace","react_router_dom","to","react_router","path","exact","component","components_CorrecaoAutomatica","components_PainelEmocao","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a91a5e8e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CorrecaoAutomatica extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputNome: '',\r\n            inputEmail: '',\r\n            inputDescricao: '',\r\n        }\r\n    }\r\n\r\n    spellCheck = e => {\r\n        let re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n\r\n        if(this.state.inputNome.length < 3) {\r\n            alert(\"O nome é muito curto\");\r\n        } else if (!re.test(String(this.state.inputEmail).toLowerCase()) ) {\r\n            alert(\"Email invalido\");\r\n        } else if (this.state.inputDescricao.length < 3) {\r\n            alert(\"Adicione uma descrição\");\r\n        } else {\r\n            e.preventDefault();\r\n            this.props.spellCheck(this.state.inputNome, this.state.inputEmail, this.state.inputDescricao);\r\n        }\r\n    }\r\n\r\n    handleChanges = (id, value) => {\r\n        if(id === \"nome\"){\r\n            \r\n            this.setState({\r\n                inputNome: value,\r\n            })\r\n        }else if(id === \"email\"){\r\n            \r\n            this.setState({\r\n                inputEmail: value,\r\n            })\r\n        }else {\r\n            \r\n            this.setState({\r\n                inputDescricao: value,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Nome</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"nome\"\r\n                            placeholder=\"Informe seu nome\"\r\n                            onChange={event => this.handleChanges(event.target.id, event.target.value)}\r\n                            />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            id=\"email\"\r\n                            placeholder=\"nome@exemplo.com\"\r\n                            onChange={event => this.handleChanges(event.target.id, event.target.value)}\r\n                            />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Descrição</label>\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            id=\"descricao\"\r\n                            rows=\"3\"\r\n                            onChange={event => this.handleChanges(event.target.id, event.target.value)}\r\n                            />\r\n                        \r\n                    </div>\r\n                    <button\r\n                        style={{float: 'right'}}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={e => this.spellCheck(e)}\r\n                        >Salvar</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CorrecaoAutomatica;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass AnaliseTexto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            palavrasChave : [],\r\n            lingua: '',\r\n            sentimento: '',\r\n            flag: false,\r\n        }\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        if(this.state.flag === false) {\r\n            this.handleLingua(this.props.descricao);\r\n            this.handlePalavras(this.props.descricao);\r\n            this.handleSentimento(this.props.descricao);\r\n        }\r\n    }\r\n\r\n    handleLingua = descricao => {\r\n        const key = \"b7857a3c744e4b589098202a253ec8f5\";\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://brazilsouth.api.cognitive.microsoft.com/text/analytics/v2.0/languages',\r\n            headers : {\r\n                'Ocp-Apim-Subscription-Key' : key,\r\n            },\r\n            data : {\r\n                \"documents\" : [\r\n                    {\r\n                        \"id\" : \"1\",\r\n                        \"text\" : descricao,\r\n                    }\r\n                ]\r\n            },\r\n\r\n        }).then (response => {\r\n            this.setState({\r\n                lingua : response.data.documents[0].detectedLanguages[0],\r\n                flag: true,\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    handleSentimento = descricao => {\r\n        const key = \"b7857a3c744e4b589098202a253ec8f5\";\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://brazilsouth.api.cognitive.microsoft.com/text/analytics/v2.0/sentiment',\r\n            headers : {\r\n                'Ocp-Apim-Subscription-Key' : key,\r\n            },\r\n            data : {\r\n                \"documents\": [\r\n                    {\r\n                        // \"language\" : responseIdioma.iso6391Name,\r\n                        \"id\" : \"1\",\r\n                        \"text\" : descricao, \r\n                    }\r\n                ]\r\n            }\r\n        }).then (response => {\r\n            \r\n            this.setState({\r\n                sentimento : response.data.documents[0].score,\r\n                flag: true,\r\n            })\r\n        })\r\n    }\r\n\r\n    handlePalavras = descricao => {\r\n        const key = \"b7857a3c744e4b589098202a253ec8f5\";\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://brazilsouth.api.cognitive.microsoft.com/text/analytics/v2.0/keyPhrases',\r\n            headers : {\r\n                'Ocp-Apim-Subscription-Key' : key,\r\n            },\r\n            data : {\r\n                \"documents\" : [\r\n                    {\r\n                        // \"language\" : responseIdioma.iso6391Name,\r\n                        \"id\" : \"1\",\r\n                        \"text\" : descricao, \r\n                    }\r\n                ]\r\n            }, \r\n        }).then (response => {\r\n            this.setState({\r\n                palavrasChave : response.data.documents[0].keyPhrases,\r\n                flag: true,\r\n            })\r\n        })\r\n    }\r\n\r\n    reRender = () =>{\r\n        if(this.state.flag) {\r\n            this.setState({flag: false});\r\n        }\r\n    }\r\n    render () {\r\n        window.setTimeout(this.reRender, 2000);\r\n        return (\r\n            <div>\r\n                <strong style={{fontSize: '14px'}}>Lingua</strong> <br/>\r\n                \r\n                \r\n                {this.state.lingua.name} - { this.state.lingua.iso6391Name}<br/><br/>\r\n                \r\n                \r\n                \r\n                <strong style={{fontSize: '14px'}}>Palavras Chaves</strong> <br/>\r\n                {Object.entries(this.state.palavrasChave).map(([i, value]) => {\r\n                    \r\n                    return (\r\n                        <span key={i} className=\"badge badge-primary ml-1\">\r\n                        {value}\r\n                        \r\n                        </span> \r\n                    )\r\n                }) \r\n                }\r\n                 <br/><br/>\r\n                <strong style={{fontSize: '14px'}}>Sentimento</strong> <br/>\r\n                <div className=\"progress\">\r\n                <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${this.state.sentimento*100}%`}}>{parseInt(this.state.sentimento*100)}%</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnaliseTexto;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport AnaliseTexto from './AnaliseTexto';\r\n\r\nclass PainelEmocao extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.data = props.data;\r\n    }\r\n\r\n    render () { \r\n        return (\r\n            <div className=\"row\">\r\n                {\r\n                    this.data.map(info => { \r\n                        return (\r\n                            <div className=\"col-md-3\" key={info.userNome}>\r\n                            \r\n                                <div className=\"card mt-3\">\r\n                                    <div className=\"card-header text-center text-white bg-primary\" style={{paddingTop: '20px'}}>\r\n                                        \r\n                                        <h6>{info.userNome}</h6> \r\n                                        \r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <strong style={{fontSize: '14px'}}>Email</strong><br/>\r\n                                        {info.userEmail}<br/><br/>\r\n                                        <strong style={{fontSize: '14px'}}>Descrição</strong> <br/>\r\n                                        {info.userDescricao} <br/><br/>\r\n                                        <AnaliseTexto descricao={info.userDescricao}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                        \r\n                    })\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PainelEmocao;","export const DB_config = {\r\n    apiKey: \"AIzaSyCcOPzHbva83MgWlXHL5HAP1BNtk3p7UPE\",\r\n    authDomain: \"desafiostefanini-e7483.firebaseapp.com\",\r\n    databaseURL: \"https://desafiostefanini-e7483.firebaseio.com\",\r\n    projectId: \"desafiostefanini-e7483\",\r\n    storageBucket: \"desafiostefanini-e7483.appspot.com\",\r\n    messagingSenderId: \"927440062116\"\r\n}","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nimport CorrecaoAutomatica from './components/CorrecaoAutomatica';\r\nimport PainelEmocao from './components/PainelEmocao';\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/database';\r\nimport { DB_config } from './config/config';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      returnSpellCheck : '',\r\n      data: []\r\n    }\r\n    this.spellCheck = this.spellCheck.bind(this);\r\n    this.addUser = this.addUser.bind(this);\r\n\r\n    this.app = firebase.initializeApp(DB_config);\r\n    this.db = this.app.database().ref().child('data')\r\n\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { data } = this.state;\r\n    this.db.on('child_added', snap => {\r\n      data.push({\r\n        userNome: snap.val().userNome,\r\n        userEmail: snap.val().userEmail,\r\n        userDescricao : snap.val().userDescricao,\r\n      })\r\n      this.setState({data});\r\n    });\r\n  }\r\n\r\n  async spellCheck  (nome, email, descricao)  {\r\n    const key = '44696f4e806a4b7ab09d1519fc5e4e48';\r\n   \r\n    const response = await axios({\r\n      method: 'get',\r\n      url: `https://api.cognitive.microsoft.com/bing/v7.0/spellcheck?text=${descricao}`,\r\n      params : {\r\n        'mkt':'pt-br',\r\n        'mode' : 'proof'\r\n      },\r\n      headers : {\r\n        'Ocp-Apim-Subscription-Key' : key,\r\n      },\r\n    });\r\n      \r\n    await this.setState ({\r\n      returnSpellCheck : response.data.flaggedTokens,\r\n    })\r\n\r\n    for(let i = 0; i < this.state.returnSpellCheck.length; i++) {\r\n      let newStr = this.state.returnSpellCheck[i].suggestions[0].suggestion;\r\n      let oldStr = this.state.returnSpellCheck[i].token;\r\n      descricao = descricao.replace(oldStr, newStr);      \r\n    }\r\n\r\n    this.addUser(nome, email, descricao);\r\n  }\r\n \r\n  addUser = (nome, email, descricao) => {\r\n    this.db.push().set({\r\n      userNome: nome,\r\n      userEmail: email,\r\n      userDescricao : descricao,\r\n    }, err => {\r\n      if(err) {\r\n        alert(\"Não foi possivel adicionar.\")\r\n      }else {\r\n        alert(\"Adicionado com sucesso\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\r\n          <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav \">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">Desafio I - Correcao Texto</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/painel\" className=\"nav-link\">Desafio II - Painel</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      <div  className=\"container\">\r\n        <div className=\"col\">\r\n            <Route path=\"/\" exact component={() => <CorrecaoAutomatica spellCheck={this.spellCheck}/>} />\r\n            <Route path=\"/painel\" component={() => <PainelEmocao data={this.state.data}/>} />\r\n          </div>\r\n      </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}